// <auto-generated />
using System;
using BibliotecaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BibliotecaAPI.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    partial class BibliotecaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BibliotecaAPI.Models.Acceso", b =>
                {
                    b.Property<int>("IdAcceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_acceso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAcceso"));

                    b.Property<bool>("Exito")
                        .HasColumnType("bit")
                        .HasColumnName("exito");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_hora");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("usuario");

                    b.HasKey("IdAcceso")
                        .HasName("PK__acceso__F2593D4AD03FF1EB");

                    b.ToTable("acceso");
                });

            modelBuilder.Entity("BibliotecaAPI.Models.Auditoria", b =>
                {
                    b.Property<int>("IdAuditoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_auditoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAuditoria"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("accion");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_hora");

                    b.Property<string>("JsonDetalle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("json_detalle");

                    b.Property<string>("TablaAfectada")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tabla_afectada");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("usuario");

                    b.HasKey("IdAuditoria")
                        .HasName("PK__auditori__9644A3CEE167B8DC");

                    b.ToTable("auditoria");
                });

            modelBuilder.Entity("BibliotecaAPI.Models.Libro", b =>
                {
                    b.Property<int>("IdLibro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_libro");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLibro"));

                    b.Property<int?>("Anio")
                        .HasColumnType("int")
                        .HasColumnName("anio");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("autor");

                    b.Property<string>("Editorial")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("editorial");

                    b.Property<string>("Isbn")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("isbn");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("titulo");

                    b.HasKey("IdLibro")
                        .HasName("PK__libros__EC09C24E4F753B6C");

                    b.HasIndex(new[] { "Isbn" }, "UQ__libros__99F9D0A4F5C24661")
                        .IsUnique()
                        .HasFilter("[isbn] IS NOT NULL");

                    b.ToTable("libros");
                });

            modelBuilder.Entity("BibliotecaAPI.Models.Permiso", b =>
                {
                    b.Property<int>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_permiso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermiso"));

                    b.Property<string>("NombrePermiso")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre_permiso");

                    b.HasKey("IdPermiso")
                        .HasName("PK__permisos__228F224F4B6C10E8");

                    b.ToTable("permisos");
                });

            modelBuilder.Entity("BibliotecaAPI.Models.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_persona");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersona"));

                    b.Property<string>("Apellidos")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("apellidos");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cedula");

                    b.Property<string>("Nombres")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombres");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("telefono");

                    b.HasKey("IdPersona")
                        .HasName("PK__personas__228148B08F27E3D6");

                    b.HasIndex(new[] { "Cedula" }, "UQ__personas__415B7BE562FFEF3E")
                        .IsUnique();

                    b.ToTable("personas");
                });

            modelBuilder.Entity("BibliotecaAPI.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre_rol");

                    b.HasKey("IdRol")
                        .HasName("PK__rol__6ABCB5E02D30439B");

                    b.ToTable("rol");
                });

            modelBuilder.Entity("BibliotecaAPI.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("correo");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<DateOnly?>("FechaInscripcion")
                        .HasColumnType("date")
                        .HasColumnName("fecha_inscripcion");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("id_persona");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Usuario1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("usuario");

                    b.HasKey("IdUsuario")
                        .HasName("PK__usuarios__4E3E04ADD637C0C0");

                    b.HasIndex("IdPersona");

                    b.HasIndex(new[] { "Correo" }, "UQ__usuarios__2A586E0BA440ACDF")
                        .IsUnique();

                    b.HasIndex(new[] { "Usuario1" }, "UQ__usuarios__9AFF8FC6BC826AAA")
                        .IsUnique();

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("RolHasPermiso", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.Property<int>("IdPermiso")
                        .HasColumnType("int")
                        .HasColumnName("id_permiso");

                    b.HasKey("IdRol", "IdPermiso")
                        .HasName("PK__rol_has___889447C46F9B5DFE");

                    b.HasIndex("IdPermiso");

                    b.ToTable("rol_has_permisos", (string)null);
                });

            modelBuilder.Entity("UsuarioHasRol", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.HasKey("IdUsuario", "IdRol")
                        .HasName("PK__usuario___5895CFF3018A5A66");

                    b.HasIndex("IdRol");

                    b.ToTable("usuario_has_rol", (string)null);
                });

            modelBuilder.Entity("BibliotecaAPI.Models.Usuario", b =>
                {
                    b.HasOne("BibliotecaAPI.Models.Persona", "IdPersonaNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdPersona")
                        .IsRequired()
                        .HasConstraintName("FK__usuarios__id_per__3C69FB99");

                    b.Navigation("IdPersonaNavigation");
                });

            modelBuilder.Entity("RolHasPermiso", b =>
                {
                    b.HasOne("BibliotecaAPI.Models.Permiso", null)
                        .WithMany()
                        .HasForeignKey("IdPermiso")
                        .IsRequired()
                        .HasConstraintName("FK__rol_has_p__id_pe__47DBAE45");

                    b.HasOne("BibliotecaAPI.Models.Rol", null)
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .IsRequired()
                        .HasConstraintName("FK__rol_has_p__id_ro__46E78A0C");
                });

            modelBuilder.Entity("UsuarioHasRol", b =>
                {
                    b.HasOne("BibliotecaAPI.Models.Rol", null)
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .IsRequired()
                        .HasConstraintName("FK__usuario_h__id_ro__4222D4EF");

                    b.HasOne("BibliotecaAPI.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__usuario_h__id_us__412EB0B6");
                });

            modelBuilder.Entity("BibliotecaAPI.Models.Persona", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
